version: '3.9'

services:

  mongodb:
    build:
      context: ./mongo
      dockerfile: Dockerfile
    image: mongo
    container_name: mongodb
    command: mongod --auth
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE}
      MONGODB_DATA: ${MONGODB_DATA}
      MONDODB_LOG: ${MONDODB_LOG}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
    volumes:
      - ${HOSTDB_DATA}:${MONGODB_DATA}
      - ${HOSTDB_SOURCE}:${MONGODB_SOURCE}
    networks:
      - backend

  openalpr:
    image: openalpr
    container_name: openalpr
    build:
      context: ./openalpr
      args:
        - RTSP_SOURCE
      target: 'final-stage'
      dockerfile: Dockerfile
    environment:
      CAM_NAME: ${CAM_NAME}
      RTSP_SOURCE: ${RTSP_SOURCE}
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
    volumes:
      - ${HOST_SOURCE_ALPR}:${ALPR_PATH_SOURCE}
      - ${HOST_PATH_CONFIG}:${ALPR_PATH_CONFIG}
      - ${HOST_PATH_DATA}:${ALPR_PATH_DATA}
    ports:
      - "11300:11300"
      - "8355:8355"
      - "554:554"
    restart: always
    depends_on:
      - mongodb
    networks:
      - backend
      - frontend
    cap_add:
      - SYS_NICE

  manager:
    build:
      context: ./manager
      dockerfile: Dockerfile
    container_name: manager
    image: manager
    restart: always
    command: beanstalkd -l 127.0.0.1 -p 11300
    environment:
      MONGODB_DATABASE: ${MONGODB_DATABASE}
      MONGODB_USERNAME: ${MONGODB_USERNAME}
      MONGODB_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_HOSTNAME: ${MONGODB_HOSTNAME}
      URL_ENDPOINT: ${URL_ENDPOINT}
      ALPR_PATH_IMG: ${ALPR_PATH_IMG}
    volumes:
      - ${HOST_PATH_DATA}:${ALPR_PATH_DATA}
      - ${HOST_SOURCE_MANAGER}:${MANAGER_PATH_SOURCE}
    depends_on:
      - mongodb
    networks:
      - backend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local

